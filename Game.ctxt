#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ Dies\ ist\ die\ Hauptklasse\ der\ Anwendung\ "MiniAdventure".\r\n\ \ "MiniAdventure"\ ist\ ein\ sehr\ einfaches,\ textbasiertes\r\n\ \ Adventure-Game.\ Ein\ Spieler\ kann\ sich\ in\ einer\ Umgebung\ bewegen,\r\n\ \ mehr\ nicht.\ Das\ Spiel\ sollte\ auf\ jeden\ Fall\ ausgebaut\ werden,\r\n\ \ damit\ es\ interessanter\ wird\!\r\n\ \r\n\ \ Zum\ Spielen\ muss\ eine\ Instanz\ dieser\ Klasse\ erzeugt\ werden\ und\r\n\ \ an\ ihr\ die\ Methode\ "spielen"\ aufgerufen\ werden.\r\n\ \r\n\ \ Diese\ Instanz\ dieser\ Klasse\ erzeugt\ und\ initialisiert\ alle\r\n\ \ anderen\ Objekte\ der\ Anwendung\:\ Sie\ legt\ alle\ R\u00E4ume\ und\ einen\r\n\ \ Parser\ an\ und\ startet\ das\ Spiel.\ Sie\ wertet\ auch\ die\ Befehle\r\n\ \ aus,\ die\ der\ Parser\ liefert\ und\ sorgt\ f\u00FCr\ ihre\ Ausf\u00FChrung.\r\n\ \r\n\ @author\ \ auf\ Grundlage\ von\ Michael\ K\u00F6lling\ und\ David\ J.\ Barnes\r\n\ \r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Erzeuge\ ein\ Spiel\ und\ initialisiere\ die\ interne\ Raumkarte.\r\n
comment10.params=
comment10.target=void\ lookForItemsInRoom()
comment11.params=name
comment11.target=void\ lookForItem(java.lang.String)
comment12.params=
comment12.target=void\ checkForEnemy()
comment13.params=weapon
comment13.target=int\ attack(Weapon)
comment14.params=args
comment14.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ raeumeAnlegen()
comment2.text=\r\n\ Erzeuge\ alle\ R\u00E4ume\ und\ verbinde\ ihre\ Ausg\u00E4nge\ miteinander.\r\n
comment3.params=
comment3.target=void\ spielen()
comment3.text=\r\n\ Die\ Hauptmethode\ zum\ Spielen.\ L\u00E4uft\ bis\ zum\ Ende\ des\ Spiels\r\n\ in\ einer\ Schleife.\r\n
comment4.params=
comment4.target=void\ willkommenstextAusgeben()
comment4.text=\r\n\ Einen\ Begr\u00FC\u00DFungstext\ f\u00FCr\ den\ Spieler\ ausgeben.\r\n
comment5.params=command
comment5.target=boolean\ verarbeiteBefehl(Befehl)
comment5.text=\r\n\ Verarbeite\ einen\ gegebenen\ Befehl\ (f\u00FChre\ ihn\ aus).\r\n\ @param\ command\ \ der\ zu\ verarbeitende\ Befehl.\r\n\ @return\ \ \ \ \ \ \ \ true,\ wenn\ der\ Befehl\ das\ Spiel\ beendet,\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ sonst\r\n
comment6.params=command
comment6.target=void\ handleContainerCommand(Befehl)
comment7.params=
comment7.target=void\ hilfstextAusgeben()
comment7.text=\r\n\ Gib\ Hilfsinformationen\ aus.\r\n\ Hier\ geben\ wir\ eine\ etwas\ alberne\ und\ unklare\ Beschreibung\r\n\ aus,\ sowie\ eine\ Liste\ der\ Befehlsw\u00F6rter.\r\n
comment8.params=command
comment8.target=void\ changeRoom(Befehl)
comment8.text=\r\n\ Versuche,\ in\ eine\ Richtung\ zu\ gehen.\ Wenn\ es\ einen\ Ausgang\ gibt,\r\n\ wechsele\ in\ den\ neuen\ Raum,\ ansonsten\ gib\ eine\ Fehlermeldung\r\n\ aus.\r\n
comment9.params=command
comment9.target=boolean\ exit(Befehl)
comment9.text=\r\n\ "quit"\ wurde\ eingegeben.\ \u00DCberpr\u00FCfe\ den\ Rest\ des\ Befehls,\r\n\ ob\ das\ Spiel\ wirklich\ beendet\ werden\ soll.\r\n\ @return\ \ true,\ wenn\ der\ Befehl\ das\ Spiel\ beendet,\ \r\n\ \ \ \ \ \ \ \ \ \ false\ sonst\r\n
numComments=15
