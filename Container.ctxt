#BlueJ class context
comment0.target=Container
comment0.text=\r\n\ Container\ stellen\ Beh\u00E4ltnisse,\ die\ Gegenst\u00E4nde\ beinhalten\ k\u00F6nnen,\ die\ der\ Spieler\ nehmen\ kann.\r\n\r\n\ @author\ Moritz\r\n\ \r\n
comment1.params=_name\ _sizeLimit
comment1.target=Container(java.lang.String,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Container\r\n
comment2.params=_name\ _sizeLimit\ _isLocked
comment2.target=Container(java.lang.String,\ int,\ boolean)
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Gibt\ den\ Namen\ des\ Containers\ zur\u00FCck\r\n
comment4.params=
comment4.target=boolean\ isLocked()
comment5.params=
comment5.target=void\ printContents()
comment5.text=\r\n\ Druckt\ die\ Inhalte\ des\ Containers\ einzeln,\ falls\ dieser\ Gegenst\u00E4nde\ in\ sich\ tr\u00E4gt.\ Ansonsten\ wird\ gedruckt,\ dass\ dieser\ leer\ ist.\r\n
comment6.params=item
comment6.target=void\ addItem(Item)
comment6.text=\r\n\ F\u00FCgt\ einen\ Gegenstand\ zum\ Container\ hinzu,\ falls\ dieser\ sein\ Gegenstandslimit\ noch\ nicht\ erreicht\ hat.\r\n
comment7.params=itemName\ hasWeapon
comment7.target=Item\ takeItem(java.lang.String,\ boolean)
comment7.text=\r\n\ Nimmt\ einen\ Gegenstand\ aus\ dem\ Container,\ f\u00FCgt\ diesen\ dem\ Inventar\ des\ Spielers\ hinzu\ und\ \u00FCberpr\u00FCft,\ ob\ der\ Spieler\ bereits\ eine\ Waffe\ hat,\ wenn\ er\ eine\ neue\ aufheben\ will.\r\n\ Wenn\ erfolgreich\ und\ der\ Spieler\ keine\ Waffe\ besitzt,\ wird\ der\ Gegenstand\ zur\u00FCckgegeben.\ Ansonsten\ wird\ null\ zur\u00FCckgegeben.\r\n
numComments=8
